name: CI

on:
  push:
    branches:
      - main
      - gha_ci
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  build_and_test:
    name: CI
    strategy:
      matrix:
        platform:
          - name: virtual
            image: default
            nodes: [self-hosted, 1ES.Pool=gha-virtual-ccf-sub]
            options: --user root --publish-all --cap-add NET_ADMIN --cap-add NET_RAW --cap-add SYS_PTRACE -v /lib/modules:/lib/modules:ro
          - name: snp
            image: default
            nodes: [self-hosted, 1ES.Pool=gha-virtual-ccf-sub]
            options: --user root --publish-all --cap-add NET_ADMIN --cap-add NET_RAW --cap-add SYS_PTRACE -v /lib/modules:/lib/modules:ro
          - name: sgx
            image: sgx
            nodes: [self-hosted, 1ES.Pool=gha-sgx-ccf-sub]
            options: --user root --publish-all --cap-add NET_ADMIN --cap-add NET_RAW --device /dev/sgx_enclave:/dev/sgx_enclave --device /dev/sgx_provision:/dev/sgx_provision -v /dev/sgx:/dev/sgx -v /lib/modules:/lib/modules:ro
    runs-on: ${{ matrix.platform.nodes }}
    container:
      image: ghcr.io/microsoft/ccf/ci/${{ matrix.platform.image }}:build-19-06-2024
      options: ${{ matrix.platform.options }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Build Debug ${{ matrix.platform.name }}"
        run: |
          git config --global --add safe.directory /__w/CCF/CCF
          mkdir build
          cd build
          cmake -GNinja -DCOMPILE_TARGET=${{ matrix.platform.name }} -DCMAKE_BUILD_TYPE=Debug -DLVI_MITIGATIONS=OFF -DVERBOSE_LOGGING=ON ..
          ninja
        shell: bash

      - name: "Test ${{ matrix.platform.name }}"
        run: |
          cd build
          ASAN_SYMBOLIZER=/usr/bin/llvm-symbolizer-15
          export ASAN_SYMBOLIZER_PATH=$(realpath $(ASAN_SYMBOLIZERS))
          ./tests.sh --timeout 240 --output-on-failure -L e2e
        shell: bash
        if: "${{ matrix.platform.name != 'snp' }}" # Needs 1ES Pool support

      - name: "Partitions Test ${{ matrix.platform.name }}"
        run: |
          source env/bin/activate && ctest -VV --timeout 240 -L partitions -C partitions
        shell: bash
        if: "${{ matrix.platform.name != 'snp' }}" # Needs 1ES Pool support

      - name: "Upload logs for ${{ matrix.platform.name }}"
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ matrix.platform.name }}
          path: build/workspace/