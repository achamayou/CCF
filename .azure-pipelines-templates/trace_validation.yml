steps:
  - script: |
      set -ex
      sudo apt update
      sudo apt install -y default-jre parallel
      python3 ./tla/install_deps.py
    displayName: "Install TLA dependencies"

  - script: |
      set -ex
      set -o pipefail
      cd tla/
      mkdir -p traces/consensus
      mv ../build/consensus traces/
      parallel 'JVM_OPTIONS=-Dtlc2.tool.queue.IStateQueue=StateDeque JSON={} ./tlc.sh -dump dot,constrained,colorize,actionlabels {}.dot -dumpTrace tla {}.trace.tla -dumpTrace json {}.trace.json consensus/Traceccfraft.tla' ::: $(ls traces/consensus/*.ndjson)
    displayName: "Run Consensus Trace validation"

  - script: |
      set -ex
      set -o pipefail
      cd tla/
      mkdir -p traces/consistency
      # Passing prefix, following lines require implementing TruncateLedgerAction
      # Will become mv ../build/consistency traces/ once every action matches
      head -13 ../build/consistency/trace.ndjson > traces/consistency/trace.ndjson
      JSON=traces/consistency/trace.ndjson ./tlc.sh -dump dot,constrained,colorize,actionlabels {}.dot -dumpTrace tla {}.trace.tla -dumpTrace json {}.trace.json consistency/TraceMultiNodeReads.tla
    displayName: "Run Consistency Trace Validation"

  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: "Trace Validation Output"
      targetPath: tla/traces
    condition: or(failed(), canceled())
